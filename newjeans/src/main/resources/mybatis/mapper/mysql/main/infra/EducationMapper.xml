<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ador.infra.educationclass.EducationDao">

	<resultMap type="com.ador.infra.educationclass.EducationDto" id="classResultMapObj"></resultMap>
	
	<select id="classList" resultMap="classResultMapObj">
		select
			d.seq,
	        d.educationType,  
	        d.educationName,
	        d.educationExpenses,
	        d.teacher,
	        d.courseRegStart,
	        d.courseRegEnd,
	        d.studyStart,
	        d.studtEnd,
	        d.educationPlace,
	        d.educationContent,
	        d.regDate,
	        d.revDate
		from 
			class d
		order by 
			d.seq desc
	</select>
	
	<insert id="classInsert">
		insert into class (
			educationType,  
	        educationName,
	        educationExpenses,
	        teacher,
	        courseRegStart,
	        courseRegEnd,
	        studyStart,
	        studtEnd,
	        educationPlace,
	        educationContent,
	        regDate,
	        revDate
		) values (
			 #{educationType},
			 #{educationName},
			 #{educationExpenses},
			 #{teacher},
			 #{courseRegStart},	
			 #{courseRegEnd},
			 #{studyStart},
			 #{studtEnd},
			 #{educationPlace},
			 #{educationContent},
			 now(),
			 now()
		)
	</insert>
	
	<select id="classSelectOne" resultMap="classResultMapObj">
		select
			d.seq,
	        d.educationType,  
	        d.educationName,
	        d.educationExpenses,
	        d.teacher,
	        d.courseRegStart,
	        d.courseRegEnd,
	        d.studyStart,
	        d.studtEnd,
	        d.educationPlace,
	        d.educationContent,
	        d.regDate,
	        d.revDate
		from 
			class d
		where 1=1
			and d.seq = #{seq}
	</select>
	
	<update id="classUpdate">
		update class
		set 
			educationType = #{educationType},  
	        educationName = #{educationName},
	        educationExpenses = #{educationExpenses},
	        teacher = #{teacher},
	        courseRegStart = #{courseRegStart},
	        courseRegEnd = #{courseRegEnd},
	        studyStart = #{studyStart},
	        studtEnd = #{studtEnd},
	        educationPlace = #{educationPlace},
	        educationContent = #{educationContent}
	     where 1=1
	     	and seq = #{seq}
			
	</update>
	  
</mapper>